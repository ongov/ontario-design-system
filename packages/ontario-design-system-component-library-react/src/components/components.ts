'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import { type HeaderLanguageToggleEventDetails, type InputFocusBlurEvent, type InputInputEvent, type InputInteractionEvent, type Language, type OntarioCheckboxesCustomEvent, type OntarioDropdownListCustomEvent, type OntarioHintExpanderCustomEvent, type OntarioInputCustomEvent, type OntarioLanguageToggleCustomEvent, type OntarioRadioButtonsCustomEvent, type OntarioSearchBoxCustomEvent, type OntarioTextareaCustomEvent, type RadioAndCheckboxChangeEvent } from "@ongov/ontario-design-system-component-library";
import { OntarioAccordion as OntarioAccordionElement, defineCustomElement as defineOntarioAccordion } from "@ongov/ontario-design-system-component-library/dist/components/ontario-accordion.js";
import { OntarioAside as OntarioAsideElement, defineCustomElement as defineOntarioAside } from "@ongov/ontario-design-system-component-library/dist/components/ontario-aside.js";
import { OntarioBackToTop as OntarioBackToTopElement, defineCustomElement as defineOntarioBackToTop } from "@ongov/ontario-design-system-component-library/dist/components/ontario-back-to-top.js";
import { OntarioBadge as OntarioBadgeElement, defineCustomElement as defineOntarioBadge } from "@ongov/ontario-design-system-component-library/dist/components/ontario-badge.js";
import { OntarioBlockquote as OntarioBlockquoteElement, defineCustomElement as defineOntarioBlockquote } from "@ongov/ontario-design-system-component-library/dist/components/ontario-blockquote.js";
import { OntarioButton as OntarioButtonElement, defineCustomElement as defineOntarioButton } from "@ongov/ontario-design-system-component-library/dist/components/ontario-button.js";
import { OntarioCallout as OntarioCalloutElement, defineCustomElement as defineOntarioCallout } from "@ongov/ontario-design-system-component-library/dist/components/ontario-callout.js";
import { OntarioCardCollection as OntarioCardCollectionElement, defineCustomElement as defineOntarioCardCollection } from "@ongov/ontario-design-system-component-library/dist/components/ontario-card-collection.js";
import { OntarioCard as OntarioCardElement, defineCustomElement as defineOntarioCard } from "@ongov/ontario-design-system-component-library/dist/components/ontario-card.js";
import { OntarioCheckboxes as OntarioCheckboxesElement, defineCustomElement as defineOntarioCheckboxes } from "@ongov/ontario-design-system-component-library/dist/components/ontario-checkboxes.js";
import { OntarioCriticalAlert as OntarioCriticalAlertElement, defineCustomElement as defineOntarioCriticalAlert } from "@ongov/ontario-design-system-component-library/dist/components/ontario-critical-alert.js";
import { OntarioDateInput as OntarioDateInputElement, defineCustomElement as defineOntarioDateInput } from "@ongov/ontario-design-system-component-library/dist/components/ontario-date-input.js";
import { OntarioDropdownList as OntarioDropdownListElement, defineCustomElement as defineOntarioDropdownList } from "@ongov/ontario-design-system-component-library/dist/components/ontario-dropdown-list.js";
import { OntarioFieldset as OntarioFieldsetElement, defineCustomElement as defineOntarioFieldset } from "@ongov/ontario-design-system-component-library/dist/components/ontario-fieldset.js";
import { OntarioFooter as OntarioFooterElement, defineCustomElement as defineOntarioFooter } from "@ongov/ontario-design-system-component-library/dist/components/ontario-footer.js";
import { OntarioHeader as OntarioHeaderElement, defineCustomElement as defineOntarioHeader } from "@ongov/ontario-design-system-component-library/dist/components/ontario-header.js";
import { OntarioHintExpander as OntarioHintExpanderElement, defineCustomElement as defineOntarioHintExpander } from "@ongov/ontario-design-system-component-library/dist/components/ontario-hint-expander.js";
import { OntarioHintText as OntarioHintTextElement, defineCustomElement as defineOntarioHintText } from "@ongov/ontario-design-system-component-library/dist/components/ontario-hint-text.js";
import { OntarioIconAccessibility as OntarioIconAccessibilityElement, defineCustomElement as defineOntarioIconAccessibility } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-accessibility.js";
import { OntarioIconAccount as OntarioIconAccountElement, defineCustomElement as defineOntarioIconAccount } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-account.js";
import { OntarioIconAddAlt as OntarioIconAddAltElement, defineCustomElement as defineOntarioIconAddAlt } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-add-alt.js";
import { OntarioIconAdd as OntarioIconAddElement, defineCustomElement as defineOntarioIconAdd } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-add.js";
import { OntarioIconAlertError as OntarioIconAlertErrorElement, defineCustomElement as defineOntarioIconAlertError } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-alert-error.js";
import { OntarioIconAlertInformation as OntarioIconAlertInformationElement, defineCustomElement as defineOntarioIconAlertInformation } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-alert-information.js";
import { OntarioIconAlertSuccess as OntarioIconAlertSuccessElement, defineCustomElement as defineOntarioIconAlertSuccess } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-alert-success.js";
import { OntarioIconAlertWarning as OntarioIconAlertWarningElement, defineCustomElement as defineOntarioIconAlertWarning } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-alert-warning.js";
import { OntarioIconArrowUp as OntarioIconArrowUpElement, defineCustomElement as defineOntarioIconArrowUp } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-arrow-up.js";
import { OntarioIconAttach as OntarioIconAttachElement, defineCustomElement as defineOntarioIconAttach } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-attach.js";
import { OntarioIconBookmarkOff as OntarioIconBookmarkOffElement, defineCustomElement as defineOntarioIconBookmarkOff } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-bookmark-off.js";
import { OntarioIconBookmarkOn as OntarioIconBookmarkOnElement, defineCustomElement as defineOntarioIconBookmarkOn } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-bookmark-on.js";
import { OntarioIconCalendar as OntarioIconCalendarElement, defineCustomElement as defineOntarioIconCalendar } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-calendar.js";
import { OntarioIconCamera as OntarioIconCameraElement, defineCustomElement as defineOntarioIconCamera } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-camera.js";
import { OntarioIconChevronDown as OntarioIconChevronDownElement, defineCustomElement as defineOntarioIconChevronDown } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-chevron-down.js";
import { OntarioIconChevronLeft as OntarioIconChevronLeftElement, defineCustomElement as defineOntarioIconChevronLeft } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-chevron-left.js";
import { OntarioIconChevronRight as OntarioIconChevronRightElement, defineCustomElement as defineOntarioIconChevronRight } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-chevron-right.js";
import { OntarioIconChevronUp as OntarioIconChevronUpElement, defineCustomElement as defineOntarioIconChevronUp } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-chevron-up.js";
import { OntarioIconClock as OntarioIconClockElement, defineCustomElement as defineOntarioIconClock } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-clock.js";
import { OntarioIconCloseHeader as OntarioIconCloseHeaderElement, defineCustomElement as defineOntarioIconCloseHeader } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-close-header.js";
import { OntarioIconClose as OntarioIconCloseElement, defineCustomElement as defineOntarioIconClose } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-close.js";
import { OntarioIconCloud as OntarioIconCloudElement, defineCustomElement as defineOntarioIconCloud } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-cloud.js";
import { OntarioIconCollapse as OntarioIconCollapseElement, defineCustomElement as defineOntarioIconCollapse } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-collapse.js";
import { OntarioIconCreditCard as OntarioIconCreditCardElement, defineCustomElement as defineOntarioIconCreditCard } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-credit-card.js";
import { OntarioIconCriticalAlertWarning as OntarioIconCriticalAlertWarningElement, defineCustomElement as defineOntarioIconCriticalAlertWarning } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-critical-alert-warning.js";
import { OntarioIconDelete as OntarioIconDeleteElement, defineCustomElement as defineOntarioIconDelete } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-delete.js";
import { OntarioIconDocument as OntarioIconDocumentElement, defineCustomElement as defineOntarioIconDocument } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-document.js";
import { OntarioIconDownload as OntarioIconDownloadElement, defineCustomElement as defineOntarioIconDownload } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-download.js";
import { OntarioIconDropdownArrow as OntarioIconDropdownArrowElement, defineCustomElement as defineOntarioIconDropdownArrow } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-dropdown-arrow.js";
import { OntarioIconEdit as OntarioIconEditElement, defineCustomElement as defineOntarioIconEdit } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-edit.js";
import { OntarioIconEmail as OntarioIconEmailElement, defineCustomElement as defineOntarioIconEmail } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-email.js";
import { OntarioIconExpand as OntarioIconExpandElement, defineCustomElement as defineOntarioIconExpand } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-expand.js";
import { OntarioIconExport as OntarioIconExportElement, defineCustomElement as defineOntarioIconExport } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-export.js";
import { OntarioIconFacebookAlt as OntarioIconFacebookAltElement, defineCustomElement as defineOntarioIconFacebookAlt } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-facebook-alt.js";
import { OntarioIconFacebook as OntarioIconFacebookElement, defineCustomElement as defineOntarioIconFacebook } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-facebook.js";
import { OntarioIconFavouriteOff as OntarioIconFavouriteOffElement, defineCustomElement as defineOntarioIconFavouriteOff } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-favourite-off.js";
import { OntarioIconFavouriteOn as OntarioIconFavouriteOnElement, defineCustomElement as defineOntarioIconFavouriteOn } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-favourite-on.js";
import { OntarioIconFilter as OntarioIconFilterElement, defineCustomElement as defineOntarioIconFilter } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-filter.js";
import { OntarioIconFlickr as OntarioIconFlickrElement, defineCustomElement as defineOntarioIconFlickr } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-flickr.js";
import { OntarioIconGrid as OntarioIconGridElement, defineCustomElement as defineOntarioIconGrid } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-grid.js";
import { OntarioIconHelp as OntarioIconHelpElement, defineCustomElement as defineOntarioIconHelp } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-help.js";
import { OntarioIconInstagram as OntarioIconInstagramElement, defineCustomElement as defineOntarioIconInstagram } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-instagram.js";
import { OntarioIconInteracEnAlt as OntarioIconInteracEnAltElement, defineCustomElement as defineOntarioIconInteracEnAlt } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-interac-en-alt.js";
import { OntarioIconInteracEn as OntarioIconInteracEnElement, defineCustomElement as defineOntarioIconInteracEn } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-interac-en.js";
import { OntarioIconInteracFrAlt as OntarioIconInteracFrAltElement, defineCustomElement as defineOntarioIconInteracFrAlt } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-interac-fr-alt.js";
import { OntarioIconInteracFr as OntarioIconInteracFrElement, defineCustomElement as defineOntarioIconInteracFr } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-interac-fr.js";
import { OntarioIconLinkedinAlt as OntarioIconLinkedinAltElement, defineCustomElement as defineOntarioIconLinkedinAlt } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-linkedin-alt.js";
import { OntarioIconLinkedin as OntarioIconLinkedinElement, defineCustomElement as defineOntarioIconLinkedin } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-linkedin.js";
import { OntarioIconList as OntarioIconListElement, defineCustomElement as defineOntarioIconList } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-list.js";
import { OntarioIconLiveChat as OntarioIconLiveChatElement, defineCustomElement as defineOntarioIconLiveChat } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-live-chat.js";
import { OntarioIconLocationOff as OntarioIconLocationOffElement, defineCustomElement as defineOntarioIconLocationOff } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-location-off.js";
import { OntarioIconLocationOn as OntarioIconLocationOnElement, defineCustomElement as defineOntarioIconLocationOn } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-location-on.js";
import { OntarioIconLockOff as OntarioIconLockOffElement, defineCustomElement as defineOntarioIconLockOff } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-lock-off.js";
import { OntarioIconLockOn as OntarioIconLockOnElement, defineCustomElement as defineOntarioIconLockOn } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-lock-on.js";
import { OntarioIconMap as OntarioIconMapElement, defineCustomElement as defineOntarioIconMap } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-map.js";
import { OntarioIconMastercardAlt as OntarioIconMastercardAltElement, defineCustomElement as defineOntarioIconMastercardAlt } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-mastercard-alt.js";
import { OntarioIconMastercard as OntarioIconMastercardElement, defineCustomElement as defineOntarioIconMastercard } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-mastercard.js";
import { OntarioIconMediaFastForward as OntarioIconMediaFastForwardElement, defineCustomElement as defineOntarioIconMediaFastForward } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-media-fast-forward.js";
import { OntarioIconMediaFastRewind as OntarioIconMediaFastRewindElement, defineCustomElement as defineOntarioIconMediaFastRewind } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-media-fast-rewind.js";
import { OntarioIconMediaPause as OntarioIconMediaPauseElement, defineCustomElement as defineOntarioIconMediaPause } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-media-pause.js";
import { OntarioIconMediaPlay as OntarioIconMediaPlayElement, defineCustomElement as defineOntarioIconMediaPlay } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-media-play.js";
import { OntarioIconMediaStop as OntarioIconMediaStopElement, defineCustomElement as defineOntarioIconMediaStop } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-media-stop.js";
import { OntarioIconMenuHeader as OntarioIconMenuHeaderElement, defineCustomElement as defineOntarioIconMenuHeader } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-menu-header.js";
import { OntarioIconMenu as OntarioIconMenuElement, defineCustomElement as defineOntarioIconMenu } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-menu.js";
import { OntarioIconMicrophoneOff as OntarioIconMicrophoneOffElement, defineCustomElement as defineOntarioIconMicrophoneOff } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-microphone-off.js";
import { OntarioIconMicrophoneOn as OntarioIconMicrophoneOnElement, defineCustomElement as defineOntarioIconMicrophoneOn } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-microphone-on.js";
import { OntarioIconMoreVertical as OntarioIconMoreVerticalElement, defineCustomElement as defineOntarioIconMoreVertical } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-more-vertical.js";
import { OntarioIconNewWindow as OntarioIconNewWindowElement, defineCustomElement as defineOntarioIconNewWindow } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-new-window.js";
import { OntarioIconNext as OntarioIconNextElement, defineCustomElement as defineOntarioIconNext } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-next.js";
import { OntarioIconNotification as OntarioIconNotificationElement, defineCustomElement as defineOntarioIconNotification } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-notification.js";
import { OntarioIconPasswordHide as OntarioIconPasswordHideElement, defineCustomElement as defineOntarioIconPasswordHide } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-password-hide.js";
import { OntarioIconPasswordShow as OntarioIconPasswordShowElement, defineCustomElement as defineOntarioIconPasswordShow } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-password-show.js";
import { OntarioIconPhone as OntarioIconPhoneElement, defineCustomElement as defineOntarioIconPhone } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-phone.js";
import { OntarioIconPhoto as OntarioIconPhotoElement, defineCustomElement as defineOntarioIconPhoto } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-photo.js";
import { OntarioIconPinLocationOff as OntarioIconPinLocationOffElement, defineCustomElement as defineOntarioIconPinLocationOff } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-pin-location-off.js";
import { OntarioIconPinLocationOn as OntarioIconPinLocationOnElement, defineCustomElement as defineOntarioIconPinLocationOn } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-pin-location-on.js";
import { OntarioIconPrevious as OntarioIconPreviousElement, defineCustomElement as defineOntarioIconPrevious } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-previous.js";
import { OntarioIconPrint as OntarioIconPrintElement, defineCustomElement as defineOntarioIconPrint } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-print.js";
import { OntarioIconRemoveAlt as OntarioIconRemoveAltElement, defineCustomElement as defineOntarioIconRemoveAlt } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-remove-alt.js";
import { OntarioIconRemove as OntarioIconRemoveElement, defineCustomElement as defineOntarioIconRemove } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-remove.js";
import { OntarioIconReplay as OntarioIconReplayElement, defineCustomElement as defineOntarioIconReplay } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-replay.js";
import { OntarioIconRssFeed as OntarioIconRssFeedElement, defineCustomElement as defineOntarioIconRssFeed } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-rss-feed.js";
import { OntarioIconSave as OntarioIconSaveElement, defineCustomElement as defineOntarioIconSave } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-save.js";
import { OntarioIconSearchWhite as OntarioIconSearchWhiteElement, defineCustomElement as defineOntarioIconSearchWhite } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-search-white.js";
import { OntarioIconSearch as OntarioIconSearchElement, defineCustomElement as defineOntarioIconSearch } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-search.js";
import { OntarioIconSentiment1 as OntarioIconSentiment1Element, defineCustomElement as defineOntarioIconSentiment1 } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-sentiment-1.js";
import { OntarioIconSentiment2 as OntarioIconSentiment2Element, defineCustomElement as defineOntarioIconSentiment2 } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-sentiment-2.js";
import { OntarioIconSentiment3 as OntarioIconSentiment3Element, defineCustomElement as defineOntarioIconSentiment3 } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-sentiment-3.js";
import { OntarioIconSentiment4 as OntarioIconSentiment4Element, defineCustomElement as defineOntarioIconSentiment4 } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-sentiment-4.js";
import { OntarioIconSentiment5 as OntarioIconSentiment5Element, defineCustomElement as defineOntarioIconSentiment5 } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-sentiment-5.js";
import { OntarioIconSettings as OntarioIconSettingsElement, defineCustomElement as defineOntarioIconSettings } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-settings.js";
import { OntarioIconShare as OntarioIconShareElement, defineCustomElement as defineOntarioIconShare } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-share.js";
import { OntarioIconSort as OntarioIconSortElement, defineCustomElement as defineOntarioIconSort } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-sort.js";
import { OntarioIconTag as OntarioIconTagElement, defineCustomElement as defineOntarioIconTag } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-tag.js";
import { OntarioIconTextMessage as OntarioIconTextMessageElement, defineCustomElement as defineOntarioIconTextMessage } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-text-message.js";
import { OntarioIconTimer as OntarioIconTimerElement, defineCustomElement as defineOntarioIconTimer } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-timer.js";
import { OntarioIconTransportBicycle as OntarioIconTransportBicycleElement, defineCustomElement as defineOntarioIconTransportBicycle } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-transport-bicycle.js";
import { OntarioIconTransportBus as OntarioIconTransportBusElement, defineCustomElement as defineOntarioIconTransportBus } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-transport-bus.js";
import { OntarioIconTransportCar as OntarioIconTransportCarElement, defineCustomElement as defineOntarioIconTransportCar } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-transport-car.js";
import { OntarioIconTransportWalk as OntarioIconTransportWalkElement, defineCustomElement as defineOntarioIconTransportWalk } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-transport-walk.js";
import { OntarioIconTty as OntarioIconTtyElement, defineCustomElement as defineOntarioIconTty } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-tty.js";
import { OntarioIconTwitterAlt as OntarioIconTwitterAltElement, defineCustomElement as defineOntarioIconTwitterAlt } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-twitter-alt.js";
import { OntarioIconTwitter as OntarioIconTwitterElement, defineCustomElement as defineOntarioIconTwitter } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-twitter.js";
import { OntarioIconUpload as OntarioIconUploadElement, defineCustomElement as defineOntarioIconUpload } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-upload.js";
import { OntarioIconVideo as OntarioIconVideoElement, defineCustomElement as defineOntarioIconVideo } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-video.js";
import { OntarioIconVisa as OntarioIconVisaElement, defineCustomElement as defineOntarioIconVisa } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-visa.js";
import { OntarioIconVoteDislike as OntarioIconVoteDislikeElement, defineCustomElement as defineOntarioIconVoteDislike } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-vote-dislike.js";
import { OntarioIconVoteLike as OntarioIconVoteLikeElement, defineCustomElement as defineOntarioIconVoteLike } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-vote-like.js";
import { OntarioIconVpnKey as OntarioIconVpnKeyElement, defineCustomElement as defineOntarioIconVpnKey } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-vpn-key.js";
import { OntarioIconWheelchair as OntarioIconWheelchairElement, defineCustomElement as defineOntarioIconWheelchair } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-wheelchair.js";
import { OntarioIconWifi as OntarioIconWifiElement, defineCustomElement as defineOntarioIconWifi } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-wifi.js";
import { OntarioIconYoutube as OntarioIconYoutubeElement, defineCustomElement as defineOntarioIconYoutube } from "@ongov/ontario-design-system-component-library/dist/components/ontario-icon-youtube.js";
import { OntarioInput as OntarioInputElement, defineCustomElement as defineOntarioInput } from "@ongov/ontario-design-system-component-library/dist/components/ontario-input.js";
import { OntarioLanguageToggle as OntarioLanguageToggleElement, defineCustomElement as defineOntarioLanguageToggle } from "@ongov/ontario-design-system-component-library/dist/components/ontario-language-toggle.js";
import { OntarioLoadingIndicator as OntarioLoadingIndicatorElement, defineCustomElement as defineOntarioLoadingIndicator } from "@ongov/ontario-design-system-component-library/dist/components/ontario-loading-indicator.js";
import { OntarioPageAlert as OntarioPageAlertElement, defineCustomElement as defineOntarioPageAlert } from "@ongov/ontario-design-system-component-library/dist/components/ontario-page-alert.js";
import { OntarioRadioButtons as OntarioRadioButtonsElement, defineCustomElement as defineOntarioRadioButtons } from "@ongov/ontario-design-system-component-library/dist/components/ontario-radio-buttons.js";
import { OntarioSearchBox as OntarioSearchBoxElement, defineCustomElement as defineOntarioSearchBox } from "@ongov/ontario-design-system-component-library/dist/components/ontario-search-box.js";
import { OntarioStepIndicator as OntarioStepIndicatorElement, defineCustomElement as defineOntarioStepIndicator } from "@ongov/ontario-design-system-component-library/dist/components/ontario-step-indicator.js";
import { OntarioTable as OntarioTableElement, defineCustomElement as defineOntarioTable } from "@ongov/ontario-design-system-component-library/dist/components/ontario-table.js";
import { OntarioTaskList as OntarioTaskListElement, defineCustomElement as defineOntarioTaskList } from "@ongov/ontario-design-system-component-library/dist/components/ontario-task-list.js";
import { OntarioTask as OntarioTaskElement, defineCustomElement as defineOntarioTask } from "@ongov/ontario-design-system-component-library/dist/components/ontario-task.js";
import { OntarioTextarea as OntarioTextareaElement, defineCustomElement as defineOntarioTextarea } from "@ongov/ontario-design-system-component-library/dist/components/ontario-textarea.js";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

type OntarioAccordionEvents = NonNullable<unknown>;

export const OntarioAccordion: StencilReactComponent<OntarioAccordionElement, OntarioAccordionEvents> = /*@__PURE__*/ createComponent<OntarioAccordionElement, OntarioAccordionEvents>({
    tagName: 'ontario-accordion',
    elementClass: OntarioAccordionElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioAccordionEvents,
    defineCustomElement: defineOntarioAccordion
});

type OntarioAsideEvents = NonNullable<unknown>;

export const OntarioAside: StencilReactComponent<OntarioAsideElement, OntarioAsideEvents> = /*@__PURE__*/ createComponent<OntarioAsideElement, OntarioAsideEvents>({
    tagName: 'ontario-aside',
    elementClass: OntarioAsideElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioAsideEvents,
    defineCustomElement: defineOntarioAside
});

type OntarioBackToTopEvents = NonNullable<unknown>;

export const OntarioBackToTop: StencilReactComponent<OntarioBackToTopElement, OntarioBackToTopEvents> = /*@__PURE__*/ createComponent<OntarioBackToTopElement, OntarioBackToTopEvents>({
    tagName: 'ontario-back-to-top',
    elementClass: OntarioBackToTopElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioBackToTopEvents,
    defineCustomElement: defineOntarioBackToTop
});

type OntarioBadgeEvents = NonNullable<unknown>;

export const OntarioBadge: StencilReactComponent<OntarioBadgeElement, OntarioBadgeEvents> = /*@__PURE__*/ createComponent<OntarioBadgeElement, OntarioBadgeEvents>({
    tagName: 'ontario-badge',
    elementClass: OntarioBadgeElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioBadgeEvents,
    defineCustomElement: defineOntarioBadge
});

type OntarioBlockquoteEvents = NonNullable<unknown>;

export const OntarioBlockquote: StencilReactComponent<OntarioBlockquoteElement, OntarioBlockquoteEvents> = /*@__PURE__*/ createComponent<OntarioBlockquoteElement, OntarioBlockquoteEvents>({
    tagName: 'ontario-blockquote',
    elementClass: OntarioBlockquoteElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioBlockquoteEvents,
    defineCustomElement: defineOntarioBlockquote
});

type OntarioButtonEvents = NonNullable<unknown>;

export const OntarioButton: StencilReactComponent<OntarioButtonElement, OntarioButtonEvents> = /*@__PURE__*/ createComponent<OntarioButtonElement, OntarioButtonEvents>({
    tagName: 'ontario-button',
    elementClass: OntarioButtonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioButtonEvents,
    defineCustomElement: defineOntarioButton
});

type OntarioCalloutEvents = NonNullable<unknown>;

export const OntarioCallout: StencilReactComponent<OntarioCalloutElement, OntarioCalloutEvents> = /*@__PURE__*/ createComponent<OntarioCalloutElement, OntarioCalloutEvents>({
    tagName: 'ontario-callout',
    elementClass: OntarioCalloutElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioCalloutEvents,
    defineCustomElement: defineOntarioCallout
});

type OntarioCardEvents = NonNullable<unknown>;

export const OntarioCard: StencilReactComponent<OntarioCardElement, OntarioCardEvents> = /*@__PURE__*/ createComponent<OntarioCardElement, OntarioCardEvents>({
    tagName: 'ontario-card',
    elementClass: OntarioCardElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioCardEvents,
    defineCustomElement: defineOntarioCard
});

type OntarioCardCollectionEvents = NonNullable<unknown>;

export const OntarioCardCollection: StencilReactComponent<OntarioCardCollectionElement, OntarioCardCollectionEvents> = /*@__PURE__*/ createComponent<OntarioCardCollectionElement, OntarioCardCollectionEvents>({
    tagName: 'ontario-card-collection',
    elementClass: OntarioCardCollectionElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioCardCollectionEvents,
    defineCustomElement: defineOntarioCardCollection
});

type OntarioCheckboxesEvents = {
    onCheckboxOnChange: EventName<OntarioCheckboxesCustomEvent<RadioAndCheckboxChangeEvent>>,
    onCheckboxOnBlur: EventName<OntarioCheckboxesCustomEvent<InputFocusBlurEvent>>,
    onCheckboxOnFocus: EventName<OntarioCheckboxesCustomEvent<InputFocusBlurEvent>>,
    onInputErrorOccurred: EventName<CustomEvent<{ errorMessage: string }>>
};

export const OntarioCheckboxes: StencilReactComponent<OntarioCheckboxesElement, OntarioCheckboxesEvents> = /*@__PURE__*/ createComponent<OntarioCheckboxesElement, OntarioCheckboxesEvents>({
    tagName: 'ontario-checkboxes',
    elementClass: OntarioCheckboxesElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCheckboxOnChange: 'checkboxOnChange',
        onCheckboxOnBlur: 'checkboxOnBlur',
        onCheckboxOnFocus: 'checkboxOnFocus',
        onInputErrorOccurred: 'inputErrorOccurred'
    } as OntarioCheckboxesEvents,
    defineCustomElement: defineOntarioCheckboxes
});

type OntarioCriticalAlertEvents = NonNullable<unknown>;

export const OntarioCriticalAlert: StencilReactComponent<OntarioCriticalAlertElement, OntarioCriticalAlertEvents> = /*@__PURE__*/ createComponent<OntarioCriticalAlertElement, OntarioCriticalAlertEvents>({
    tagName: 'ontario-critical-alert',
    elementClass: OntarioCriticalAlertElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioCriticalAlertEvents,
    defineCustomElement: defineOntarioCriticalAlert
});

type OntarioDateInputEvents = {
    onInputOnInput: EventName<CustomEvent<{
        value: string;
        fieldType: 'day' | 'month' | 'year';
    }>>,
    onInputOnChange: EventName<CustomEvent<{
        value: string;
        fieldType: 'day' | 'month' | 'year';
    }>>,
    onInputOnBlur: EventName<CustomEvent<'day' | 'month' | 'year'>>,
    onInputOnFocus: EventName<CustomEvent<'day' | 'month' | 'year'>>,
    onInputErrorOccurred: EventName<CustomEvent<{ inputId: string; errorMessage: string }>>
};

export const OntarioDateInput: StencilReactComponent<OntarioDateInputElement, OntarioDateInputEvents> = /*@__PURE__*/ createComponent<OntarioDateInputElement, OntarioDateInputEvents>({
    tagName: 'ontario-date-input',
    elementClass: OntarioDateInputElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onInputOnInput: 'inputOnInput',
        onInputOnChange: 'inputOnChange',
        onInputOnBlur: 'inputOnBlur',
        onInputOnFocus: 'inputOnFocus',
        onInputErrorOccurred: 'inputErrorOccurred'
    } as OntarioDateInputEvents,
    defineCustomElement: defineOntarioDateInput
});

type OntarioDropdownListEvents = {
    onDropdownOnChange: EventName<OntarioDropdownListCustomEvent<InputInteractionEvent>>,
    onDropdownOnBlur: EventName<OntarioDropdownListCustomEvent<InputFocusBlurEvent>>,
    onDropdownOnFocus: EventName<OntarioDropdownListCustomEvent<InputFocusBlurEvent>>,
    onInputErrorOccurred: EventName<CustomEvent<{ errorMessage: string }>>
};

export const OntarioDropdownList: StencilReactComponent<OntarioDropdownListElement, OntarioDropdownListEvents> = /*@__PURE__*/ createComponent<OntarioDropdownListElement, OntarioDropdownListEvents>({
    tagName: 'ontario-dropdown-list',
    elementClass: OntarioDropdownListElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onDropdownOnChange: 'dropdownOnChange',
        onDropdownOnBlur: 'dropdownOnBlur',
        onDropdownOnFocus: 'dropdownOnFocus',
        onInputErrorOccurred: 'inputErrorOccurred'
    } as OntarioDropdownListEvents,
    defineCustomElement: defineOntarioDropdownList
});

type OntarioFieldsetEvents = NonNullable<unknown>;

export const OntarioFieldset: StencilReactComponent<OntarioFieldsetElement, OntarioFieldsetEvents> = /*@__PURE__*/ createComponent<OntarioFieldsetElement, OntarioFieldsetEvents>({
    tagName: 'ontario-fieldset',
    elementClass: OntarioFieldsetElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioFieldsetEvents,
    defineCustomElement: defineOntarioFieldset
});

type OntarioFooterEvents = NonNullable<unknown>;

export const OntarioFooter: StencilReactComponent<OntarioFooterElement, OntarioFooterEvents> = /*@__PURE__*/ createComponent<OntarioFooterElement, OntarioFooterEvents>({
    tagName: 'ontario-footer',
    elementClass: OntarioFooterElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioFooterEvents,
    defineCustomElement: defineOntarioFooter
});

type OntarioHeaderEvents = NonNullable<unknown>;

export const OntarioHeader: StencilReactComponent<OntarioHeaderElement, OntarioHeaderEvents> = /*@__PURE__*/ createComponent<OntarioHeaderElement, OntarioHeaderEvents>({
    tagName: 'ontario-header',
    elementClass: OntarioHeaderElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioHeaderEvents,
    defineCustomElement: defineOntarioHeader
});

type OntarioHintExpanderEvents = { onToggleExpanderEvent: EventName<OntarioHintExpanderCustomEvent<MouseEvent | KeyboardEvent>> };

export const OntarioHintExpander: StencilReactComponent<OntarioHintExpanderElement, OntarioHintExpanderEvents> = /*@__PURE__*/ createComponent<OntarioHintExpanderElement, OntarioHintExpanderEvents>({
    tagName: 'ontario-hint-expander',
    elementClass: OntarioHintExpanderElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onToggleExpanderEvent: 'toggleExpanderEvent' } as OntarioHintExpanderEvents,
    defineCustomElement: defineOntarioHintExpander
});

type OntarioHintTextEvents = NonNullable<unknown>;

export const OntarioHintText: StencilReactComponent<OntarioHintTextElement, OntarioHintTextEvents> = /*@__PURE__*/ createComponent<OntarioHintTextElement, OntarioHintTextEvents>({
    tagName: 'ontario-hint-text',
    elementClass: OntarioHintTextElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioHintTextEvents,
    defineCustomElement: defineOntarioHintText
});

type OntarioIconAccessibilityEvents = NonNullable<unknown>;

export const OntarioIconAccessibility: StencilReactComponent<OntarioIconAccessibilityElement, OntarioIconAccessibilityEvents> = /*@__PURE__*/ createComponent<OntarioIconAccessibilityElement, OntarioIconAccessibilityEvents>({
    tagName: 'ontario-icon-accessibility',
    elementClass: OntarioIconAccessibilityElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAccessibilityEvents,
    defineCustomElement: defineOntarioIconAccessibility
});

type OntarioIconAccountEvents = NonNullable<unknown>;

export const OntarioIconAccount: StencilReactComponent<OntarioIconAccountElement, OntarioIconAccountEvents> = /*@__PURE__*/ createComponent<OntarioIconAccountElement, OntarioIconAccountEvents>({
    tagName: 'ontario-icon-account',
    elementClass: OntarioIconAccountElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAccountEvents,
    defineCustomElement: defineOntarioIconAccount
});

type OntarioIconAddEvents = NonNullable<unknown>;

export const OntarioIconAdd: StencilReactComponent<OntarioIconAddElement, OntarioIconAddEvents> = /*@__PURE__*/ createComponent<OntarioIconAddElement, OntarioIconAddEvents>({
    tagName: 'ontario-icon-add',
    elementClass: OntarioIconAddElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAddEvents,
    defineCustomElement: defineOntarioIconAdd
});

type OntarioIconAddAltEvents = NonNullable<unknown>;

export const OntarioIconAddAlt: StencilReactComponent<OntarioIconAddAltElement, OntarioIconAddAltEvents> = /*@__PURE__*/ createComponent<OntarioIconAddAltElement, OntarioIconAddAltEvents>({
    tagName: 'ontario-icon-add-alt',
    elementClass: OntarioIconAddAltElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAddAltEvents,
    defineCustomElement: defineOntarioIconAddAlt
});

type OntarioIconAlertErrorEvents = NonNullable<unknown>;

export const OntarioIconAlertError: StencilReactComponent<OntarioIconAlertErrorElement, OntarioIconAlertErrorEvents> = /*@__PURE__*/ createComponent<OntarioIconAlertErrorElement, OntarioIconAlertErrorEvents>({
    tagName: 'ontario-icon-alert-error',
    elementClass: OntarioIconAlertErrorElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAlertErrorEvents,
    defineCustomElement: defineOntarioIconAlertError
});

type OntarioIconAlertInformationEvents = NonNullable<unknown>;

export const OntarioIconAlertInformation: StencilReactComponent<OntarioIconAlertInformationElement, OntarioIconAlertInformationEvents> = /*@__PURE__*/ createComponent<OntarioIconAlertInformationElement, OntarioIconAlertInformationEvents>({
    tagName: 'ontario-icon-alert-information',
    elementClass: OntarioIconAlertInformationElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAlertInformationEvents,
    defineCustomElement: defineOntarioIconAlertInformation
});

type OntarioIconAlertSuccessEvents = NonNullable<unknown>;

export const OntarioIconAlertSuccess: StencilReactComponent<OntarioIconAlertSuccessElement, OntarioIconAlertSuccessEvents> = /*@__PURE__*/ createComponent<OntarioIconAlertSuccessElement, OntarioIconAlertSuccessEvents>({
    tagName: 'ontario-icon-alert-success',
    elementClass: OntarioIconAlertSuccessElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAlertSuccessEvents,
    defineCustomElement: defineOntarioIconAlertSuccess
});

type OntarioIconAlertWarningEvents = NonNullable<unknown>;

export const OntarioIconAlertWarning: StencilReactComponent<OntarioIconAlertWarningElement, OntarioIconAlertWarningEvents> = /*@__PURE__*/ createComponent<OntarioIconAlertWarningElement, OntarioIconAlertWarningEvents>({
    tagName: 'ontario-icon-alert-warning',
    elementClass: OntarioIconAlertWarningElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAlertWarningEvents,
    defineCustomElement: defineOntarioIconAlertWarning
});

type OntarioIconArrowUpEvents = NonNullable<unknown>;

export const OntarioIconArrowUp: StencilReactComponent<OntarioIconArrowUpElement, OntarioIconArrowUpEvents> = /*@__PURE__*/ createComponent<OntarioIconArrowUpElement, OntarioIconArrowUpEvents>({
    tagName: 'ontario-icon-arrow-up',
    elementClass: OntarioIconArrowUpElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconArrowUpEvents,
    defineCustomElement: defineOntarioIconArrowUp
});

type OntarioIconAttachEvents = NonNullable<unknown>;

export const OntarioIconAttach: StencilReactComponent<OntarioIconAttachElement, OntarioIconAttachEvents> = /*@__PURE__*/ createComponent<OntarioIconAttachElement, OntarioIconAttachEvents>({
    tagName: 'ontario-icon-attach',
    elementClass: OntarioIconAttachElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconAttachEvents,
    defineCustomElement: defineOntarioIconAttach
});

type OntarioIconBookmarkOffEvents = NonNullable<unknown>;

export const OntarioIconBookmarkOff: StencilReactComponent<OntarioIconBookmarkOffElement, OntarioIconBookmarkOffEvents> = /*@__PURE__*/ createComponent<OntarioIconBookmarkOffElement, OntarioIconBookmarkOffEvents>({
    tagName: 'ontario-icon-bookmark-off',
    elementClass: OntarioIconBookmarkOffElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconBookmarkOffEvents,
    defineCustomElement: defineOntarioIconBookmarkOff
});

type OntarioIconBookmarkOnEvents = NonNullable<unknown>;

export const OntarioIconBookmarkOn: StencilReactComponent<OntarioIconBookmarkOnElement, OntarioIconBookmarkOnEvents> = /*@__PURE__*/ createComponent<OntarioIconBookmarkOnElement, OntarioIconBookmarkOnEvents>({
    tagName: 'ontario-icon-bookmark-on',
    elementClass: OntarioIconBookmarkOnElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconBookmarkOnEvents,
    defineCustomElement: defineOntarioIconBookmarkOn
});

type OntarioIconCalendarEvents = NonNullable<unknown>;

export const OntarioIconCalendar: StencilReactComponent<OntarioIconCalendarElement, OntarioIconCalendarEvents> = /*@__PURE__*/ createComponent<OntarioIconCalendarElement, OntarioIconCalendarEvents>({
    tagName: 'ontario-icon-calendar',
    elementClass: OntarioIconCalendarElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconCalendarEvents,
    defineCustomElement: defineOntarioIconCalendar
});

type OntarioIconCameraEvents = NonNullable<unknown>;

export const OntarioIconCamera: StencilReactComponent<OntarioIconCameraElement, OntarioIconCameraEvents> = /*@__PURE__*/ createComponent<OntarioIconCameraElement, OntarioIconCameraEvents>({
    tagName: 'ontario-icon-camera',
    elementClass: OntarioIconCameraElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconCameraEvents,
    defineCustomElement: defineOntarioIconCamera
});

type OntarioIconChevronDownEvents = NonNullable<unknown>;

export const OntarioIconChevronDown: StencilReactComponent<OntarioIconChevronDownElement, OntarioIconChevronDownEvents> = /*@__PURE__*/ createComponent<OntarioIconChevronDownElement, OntarioIconChevronDownEvents>({
    tagName: 'ontario-icon-chevron-down',
    elementClass: OntarioIconChevronDownElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconChevronDownEvents,
    defineCustomElement: defineOntarioIconChevronDown
});

type OntarioIconChevronLeftEvents = NonNullable<unknown>;

export const OntarioIconChevronLeft: StencilReactComponent<OntarioIconChevronLeftElement, OntarioIconChevronLeftEvents> = /*@__PURE__*/ createComponent<OntarioIconChevronLeftElement, OntarioIconChevronLeftEvents>({
    tagName: 'ontario-icon-chevron-left',
    elementClass: OntarioIconChevronLeftElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconChevronLeftEvents,
    defineCustomElement: defineOntarioIconChevronLeft
});

type OntarioIconChevronRightEvents = NonNullable<unknown>;

export const OntarioIconChevronRight: StencilReactComponent<OntarioIconChevronRightElement, OntarioIconChevronRightEvents> = /*@__PURE__*/ createComponent<OntarioIconChevronRightElement, OntarioIconChevronRightEvents>({
    tagName: 'ontario-icon-chevron-right',
    elementClass: OntarioIconChevronRightElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconChevronRightEvents,
    defineCustomElement: defineOntarioIconChevronRight
});

type OntarioIconChevronUpEvents = NonNullable<unknown>;

export const OntarioIconChevronUp: StencilReactComponent<OntarioIconChevronUpElement, OntarioIconChevronUpEvents> = /*@__PURE__*/ createComponent<OntarioIconChevronUpElement, OntarioIconChevronUpEvents>({
    tagName: 'ontario-icon-chevron-up',
    elementClass: OntarioIconChevronUpElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconChevronUpEvents,
    defineCustomElement: defineOntarioIconChevronUp
});

type OntarioIconClockEvents = NonNullable<unknown>;

export const OntarioIconClock: StencilReactComponent<OntarioIconClockElement, OntarioIconClockEvents> = /*@__PURE__*/ createComponent<OntarioIconClockElement, OntarioIconClockEvents>({
    tagName: 'ontario-icon-clock',
    elementClass: OntarioIconClockElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconClockEvents,
    defineCustomElement: defineOntarioIconClock
});

type OntarioIconCloseEvents = NonNullable<unknown>;

export const OntarioIconClose: StencilReactComponent<OntarioIconCloseElement, OntarioIconCloseEvents> = /*@__PURE__*/ createComponent<OntarioIconCloseElement, OntarioIconCloseEvents>({
    tagName: 'ontario-icon-close',
    elementClass: OntarioIconCloseElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconCloseEvents,
    defineCustomElement: defineOntarioIconClose
});

type OntarioIconCloseHeaderEvents = NonNullable<unknown>;

export const OntarioIconCloseHeader: StencilReactComponent<OntarioIconCloseHeaderElement, OntarioIconCloseHeaderEvents> = /*@__PURE__*/ createComponent<OntarioIconCloseHeaderElement, OntarioIconCloseHeaderEvents>({
    tagName: 'ontario-icon-close-header',
    elementClass: OntarioIconCloseHeaderElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconCloseHeaderEvents,
    defineCustomElement: defineOntarioIconCloseHeader
});

type OntarioIconCloudEvents = NonNullable<unknown>;

export const OntarioIconCloud: StencilReactComponent<OntarioIconCloudElement, OntarioIconCloudEvents> = /*@__PURE__*/ createComponent<OntarioIconCloudElement, OntarioIconCloudEvents>({
    tagName: 'ontario-icon-cloud',
    elementClass: OntarioIconCloudElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconCloudEvents,
    defineCustomElement: defineOntarioIconCloud
});

type OntarioIconCollapseEvents = NonNullable<unknown>;

export const OntarioIconCollapse: StencilReactComponent<OntarioIconCollapseElement, OntarioIconCollapseEvents> = /*@__PURE__*/ createComponent<OntarioIconCollapseElement, OntarioIconCollapseEvents>({
    tagName: 'ontario-icon-collapse',
    elementClass: OntarioIconCollapseElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconCollapseEvents,
    defineCustomElement: defineOntarioIconCollapse
});

type OntarioIconCreditCardEvents = NonNullable<unknown>;

export const OntarioIconCreditCard: StencilReactComponent<OntarioIconCreditCardElement, OntarioIconCreditCardEvents> = /*@__PURE__*/ createComponent<OntarioIconCreditCardElement, OntarioIconCreditCardEvents>({
    tagName: 'ontario-icon-credit-card',
    elementClass: OntarioIconCreditCardElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconCreditCardEvents,
    defineCustomElement: defineOntarioIconCreditCard
});

type OntarioIconCriticalAlertWarningEvents = NonNullable<unknown>;

export const OntarioIconCriticalAlertWarning: StencilReactComponent<OntarioIconCriticalAlertWarningElement, OntarioIconCriticalAlertWarningEvents> = /*@__PURE__*/ createComponent<OntarioIconCriticalAlertWarningElement, OntarioIconCriticalAlertWarningEvents>({
    tagName: 'ontario-icon-critical-alert-warning',
    elementClass: OntarioIconCriticalAlertWarningElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconCriticalAlertWarningEvents,
    defineCustomElement: defineOntarioIconCriticalAlertWarning
});

type OntarioIconDeleteEvents = NonNullable<unknown>;

export const OntarioIconDelete: StencilReactComponent<OntarioIconDeleteElement, OntarioIconDeleteEvents> = /*@__PURE__*/ createComponent<OntarioIconDeleteElement, OntarioIconDeleteEvents>({
    tagName: 'ontario-icon-delete',
    elementClass: OntarioIconDeleteElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconDeleteEvents,
    defineCustomElement: defineOntarioIconDelete
});

type OntarioIconDocumentEvents = NonNullable<unknown>;

export const OntarioIconDocument: StencilReactComponent<OntarioIconDocumentElement, OntarioIconDocumentEvents> = /*@__PURE__*/ createComponent<OntarioIconDocumentElement, OntarioIconDocumentEvents>({
    tagName: 'ontario-icon-document',
    elementClass: OntarioIconDocumentElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconDocumentEvents,
    defineCustomElement: defineOntarioIconDocument
});

type OntarioIconDownloadEvents = NonNullable<unknown>;

export const OntarioIconDownload: StencilReactComponent<OntarioIconDownloadElement, OntarioIconDownloadEvents> = /*@__PURE__*/ createComponent<OntarioIconDownloadElement, OntarioIconDownloadEvents>({
    tagName: 'ontario-icon-download',
    elementClass: OntarioIconDownloadElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconDownloadEvents,
    defineCustomElement: defineOntarioIconDownload
});

type OntarioIconDropdownArrowEvents = NonNullable<unknown>;

export const OntarioIconDropdownArrow: StencilReactComponent<OntarioIconDropdownArrowElement, OntarioIconDropdownArrowEvents> = /*@__PURE__*/ createComponent<OntarioIconDropdownArrowElement, OntarioIconDropdownArrowEvents>({
    tagName: 'ontario-icon-dropdown-arrow',
    elementClass: OntarioIconDropdownArrowElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconDropdownArrowEvents,
    defineCustomElement: defineOntarioIconDropdownArrow
});

type OntarioIconEditEvents = NonNullable<unknown>;

export const OntarioIconEdit: StencilReactComponent<OntarioIconEditElement, OntarioIconEditEvents> = /*@__PURE__*/ createComponent<OntarioIconEditElement, OntarioIconEditEvents>({
    tagName: 'ontario-icon-edit',
    elementClass: OntarioIconEditElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconEditEvents,
    defineCustomElement: defineOntarioIconEdit
});

type OntarioIconEmailEvents = NonNullable<unknown>;

export const OntarioIconEmail: StencilReactComponent<OntarioIconEmailElement, OntarioIconEmailEvents> = /*@__PURE__*/ createComponent<OntarioIconEmailElement, OntarioIconEmailEvents>({
    tagName: 'ontario-icon-email',
    elementClass: OntarioIconEmailElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconEmailEvents,
    defineCustomElement: defineOntarioIconEmail
});

type OntarioIconExpandEvents = NonNullable<unknown>;

export const OntarioIconExpand: StencilReactComponent<OntarioIconExpandElement, OntarioIconExpandEvents> = /*@__PURE__*/ createComponent<OntarioIconExpandElement, OntarioIconExpandEvents>({
    tagName: 'ontario-icon-expand',
    elementClass: OntarioIconExpandElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconExpandEvents,
    defineCustomElement: defineOntarioIconExpand
});

type OntarioIconExportEvents = NonNullable<unknown>;

export const OntarioIconExport: StencilReactComponent<OntarioIconExportElement, OntarioIconExportEvents> = /*@__PURE__*/ createComponent<OntarioIconExportElement, OntarioIconExportEvents>({
    tagName: 'ontario-icon-export',
    elementClass: OntarioIconExportElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconExportEvents,
    defineCustomElement: defineOntarioIconExport
});

type OntarioIconFacebookEvents = NonNullable<unknown>;

export const OntarioIconFacebook: StencilReactComponent<OntarioIconFacebookElement, OntarioIconFacebookEvents> = /*@__PURE__*/ createComponent<OntarioIconFacebookElement, OntarioIconFacebookEvents>({
    tagName: 'ontario-icon-facebook',
    elementClass: OntarioIconFacebookElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconFacebookEvents,
    defineCustomElement: defineOntarioIconFacebook
});

type OntarioIconFacebookAltEvents = NonNullable<unknown>;

export const OntarioIconFacebookAlt: StencilReactComponent<OntarioIconFacebookAltElement, OntarioIconFacebookAltEvents> = /*@__PURE__*/ createComponent<OntarioIconFacebookAltElement, OntarioIconFacebookAltEvents>({
    tagName: 'ontario-icon-facebook-alt',
    elementClass: OntarioIconFacebookAltElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconFacebookAltEvents,
    defineCustomElement: defineOntarioIconFacebookAlt
});

type OntarioIconFavouriteOffEvents = NonNullable<unknown>;

export const OntarioIconFavouriteOff: StencilReactComponent<OntarioIconFavouriteOffElement, OntarioIconFavouriteOffEvents> = /*@__PURE__*/ createComponent<OntarioIconFavouriteOffElement, OntarioIconFavouriteOffEvents>({
    tagName: 'ontario-icon-favourite-off',
    elementClass: OntarioIconFavouriteOffElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconFavouriteOffEvents,
    defineCustomElement: defineOntarioIconFavouriteOff
});

type OntarioIconFavouriteOnEvents = NonNullable<unknown>;

export const OntarioIconFavouriteOn: StencilReactComponent<OntarioIconFavouriteOnElement, OntarioIconFavouriteOnEvents> = /*@__PURE__*/ createComponent<OntarioIconFavouriteOnElement, OntarioIconFavouriteOnEvents>({
    tagName: 'ontario-icon-favourite-on',
    elementClass: OntarioIconFavouriteOnElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconFavouriteOnEvents,
    defineCustomElement: defineOntarioIconFavouriteOn
});

type OntarioIconFilterEvents = NonNullable<unknown>;

export const OntarioIconFilter: StencilReactComponent<OntarioIconFilterElement, OntarioIconFilterEvents> = /*@__PURE__*/ createComponent<OntarioIconFilterElement, OntarioIconFilterEvents>({
    tagName: 'ontario-icon-filter',
    elementClass: OntarioIconFilterElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconFilterEvents,
    defineCustomElement: defineOntarioIconFilter
});

type OntarioIconFlickrEvents = NonNullable<unknown>;

export const OntarioIconFlickr: StencilReactComponent<OntarioIconFlickrElement, OntarioIconFlickrEvents> = /*@__PURE__*/ createComponent<OntarioIconFlickrElement, OntarioIconFlickrEvents>({
    tagName: 'ontario-icon-flickr',
    elementClass: OntarioIconFlickrElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconFlickrEvents,
    defineCustomElement: defineOntarioIconFlickr
});

type OntarioIconGridEvents = NonNullable<unknown>;

export const OntarioIconGrid: StencilReactComponent<OntarioIconGridElement, OntarioIconGridEvents> = /*@__PURE__*/ createComponent<OntarioIconGridElement, OntarioIconGridEvents>({
    tagName: 'ontario-icon-grid',
    elementClass: OntarioIconGridElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconGridEvents,
    defineCustomElement: defineOntarioIconGrid
});

type OntarioIconHelpEvents = NonNullable<unknown>;

export const OntarioIconHelp: StencilReactComponent<OntarioIconHelpElement, OntarioIconHelpEvents> = /*@__PURE__*/ createComponent<OntarioIconHelpElement, OntarioIconHelpEvents>({
    tagName: 'ontario-icon-help',
    elementClass: OntarioIconHelpElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconHelpEvents,
    defineCustomElement: defineOntarioIconHelp
});

type OntarioIconInstagramEvents = NonNullable<unknown>;

export const OntarioIconInstagram: StencilReactComponent<OntarioIconInstagramElement, OntarioIconInstagramEvents> = /*@__PURE__*/ createComponent<OntarioIconInstagramElement, OntarioIconInstagramEvents>({
    tagName: 'ontario-icon-instagram',
    elementClass: OntarioIconInstagramElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconInstagramEvents,
    defineCustomElement: defineOntarioIconInstagram
});

type OntarioIconInteracEnEvents = NonNullable<unknown>;

export const OntarioIconInteracEn: StencilReactComponent<OntarioIconInteracEnElement, OntarioIconInteracEnEvents> = /*@__PURE__*/ createComponent<OntarioIconInteracEnElement, OntarioIconInteracEnEvents>({
    tagName: 'ontario-icon-interac-en',
    elementClass: OntarioIconInteracEnElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconInteracEnEvents,
    defineCustomElement: defineOntarioIconInteracEn
});

type OntarioIconInteracEnAltEvents = NonNullable<unknown>;

export const OntarioIconInteracEnAlt: StencilReactComponent<OntarioIconInteracEnAltElement, OntarioIconInteracEnAltEvents> = /*@__PURE__*/ createComponent<OntarioIconInteracEnAltElement, OntarioIconInteracEnAltEvents>({
    tagName: 'ontario-icon-interac-en-alt',
    elementClass: OntarioIconInteracEnAltElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconInteracEnAltEvents,
    defineCustomElement: defineOntarioIconInteracEnAlt
});

type OntarioIconInteracFrEvents = NonNullable<unknown>;

export const OntarioIconInteracFr: StencilReactComponent<OntarioIconInteracFrElement, OntarioIconInteracFrEvents> = /*@__PURE__*/ createComponent<OntarioIconInteracFrElement, OntarioIconInteracFrEvents>({
    tagName: 'ontario-icon-interac-fr',
    elementClass: OntarioIconInteracFrElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconInteracFrEvents,
    defineCustomElement: defineOntarioIconInteracFr
});

type OntarioIconInteracFrAltEvents = NonNullable<unknown>;

export const OntarioIconInteracFrAlt: StencilReactComponent<OntarioIconInteracFrAltElement, OntarioIconInteracFrAltEvents> = /*@__PURE__*/ createComponent<OntarioIconInteracFrAltElement, OntarioIconInteracFrAltEvents>({
    tagName: 'ontario-icon-interac-fr-alt',
    elementClass: OntarioIconInteracFrAltElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconInteracFrAltEvents,
    defineCustomElement: defineOntarioIconInteracFrAlt
});

type OntarioIconLinkedinEvents = NonNullable<unknown>;

export const OntarioIconLinkedin: StencilReactComponent<OntarioIconLinkedinElement, OntarioIconLinkedinEvents> = /*@__PURE__*/ createComponent<OntarioIconLinkedinElement, OntarioIconLinkedinEvents>({
    tagName: 'ontario-icon-linkedin',
    elementClass: OntarioIconLinkedinElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconLinkedinEvents,
    defineCustomElement: defineOntarioIconLinkedin
});

type OntarioIconLinkedinAltEvents = NonNullable<unknown>;

export const OntarioIconLinkedinAlt: StencilReactComponent<OntarioIconLinkedinAltElement, OntarioIconLinkedinAltEvents> = /*@__PURE__*/ createComponent<OntarioIconLinkedinAltElement, OntarioIconLinkedinAltEvents>({
    tagName: 'ontario-icon-linkedin-alt',
    elementClass: OntarioIconLinkedinAltElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconLinkedinAltEvents,
    defineCustomElement: defineOntarioIconLinkedinAlt
});

type OntarioIconListEvents = NonNullable<unknown>;

export const OntarioIconList: StencilReactComponent<OntarioIconListElement, OntarioIconListEvents> = /*@__PURE__*/ createComponent<OntarioIconListElement, OntarioIconListEvents>({
    tagName: 'ontario-icon-list',
    elementClass: OntarioIconListElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconListEvents,
    defineCustomElement: defineOntarioIconList
});

type OntarioIconLiveChatEvents = NonNullable<unknown>;

export const OntarioIconLiveChat: StencilReactComponent<OntarioIconLiveChatElement, OntarioIconLiveChatEvents> = /*@__PURE__*/ createComponent<OntarioIconLiveChatElement, OntarioIconLiveChatEvents>({
    tagName: 'ontario-icon-live-chat',
    elementClass: OntarioIconLiveChatElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconLiveChatEvents,
    defineCustomElement: defineOntarioIconLiveChat
});

type OntarioIconLocationOffEvents = NonNullable<unknown>;

export const OntarioIconLocationOff: StencilReactComponent<OntarioIconLocationOffElement, OntarioIconLocationOffEvents> = /*@__PURE__*/ createComponent<OntarioIconLocationOffElement, OntarioIconLocationOffEvents>({
    tagName: 'ontario-icon-location-off',
    elementClass: OntarioIconLocationOffElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconLocationOffEvents,
    defineCustomElement: defineOntarioIconLocationOff
});

type OntarioIconLocationOnEvents = NonNullable<unknown>;

export const OntarioIconLocationOn: StencilReactComponent<OntarioIconLocationOnElement, OntarioIconLocationOnEvents> = /*@__PURE__*/ createComponent<OntarioIconLocationOnElement, OntarioIconLocationOnEvents>({
    tagName: 'ontario-icon-location-on',
    elementClass: OntarioIconLocationOnElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconLocationOnEvents,
    defineCustomElement: defineOntarioIconLocationOn
});

type OntarioIconLockOffEvents = NonNullable<unknown>;

export const OntarioIconLockOff: StencilReactComponent<OntarioIconLockOffElement, OntarioIconLockOffEvents> = /*@__PURE__*/ createComponent<OntarioIconLockOffElement, OntarioIconLockOffEvents>({
    tagName: 'ontario-icon-lock-off',
    elementClass: OntarioIconLockOffElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconLockOffEvents,
    defineCustomElement: defineOntarioIconLockOff
});

type OntarioIconLockOnEvents = NonNullable<unknown>;

export const OntarioIconLockOn: StencilReactComponent<OntarioIconLockOnElement, OntarioIconLockOnEvents> = /*@__PURE__*/ createComponent<OntarioIconLockOnElement, OntarioIconLockOnEvents>({
    tagName: 'ontario-icon-lock-on',
    elementClass: OntarioIconLockOnElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconLockOnEvents,
    defineCustomElement: defineOntarioIconLockOn
});

type OntarioIconMapEvents = NonNullable<unknown>;

export const OntarioIconMap: StencilReactComponent<OntarioIconMapElement, OntarioIconMapEvents> = /*@__PURE__*/ createComponent<OntarioIconMapElement, OntarioIconMapEvents>({
    tagName: 'ontario-icon-map',
    elementClass: OntarioIconMapElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMapEvents,
    defineCustomElement: defineOntarioIconMap
});

type OntarioIconMastercardEvents = NonNullable<unknown>;

export const OntarioIconMastercard: StencilReactComponent<OntarioIconMastercardElement, OntarioIconMastercardEvents> = /*@__PURE__*/ createComponent<OntarioIconMastercardElement, OntarioIconMastercardEvents>({
    tagName: 'ontario-icon-mastercard',
    elementClass: OntarioIconMastercardElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMastercardEvents,
    defineCustomElement: defineOntarioIconMastercard
});

type OntarioIconMastercardAltEvents = NonNullable<unknown>;

export const OntarioIconMastercardAlt: StencilReactComponent<OntarioIconMastercardAltElement, OntarioIconMastercardAltEvents> = /*@__PURE__*/ createComponent<OntarioIconMastercardAltElement, OntarioIconMastercardAltEvents>({
    tagName: 'ontario-icon-mastercard-alt',
    elementClass: OntarioIconMastercardAltElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMastercardAltEvents,
    defineCustomElement: defineOntarioIconMastercardAlt
});

type OntarioIconMediaFastForwardEvents = NonNullable<unknown>;

export const OntarioIconMediaFastForward: StencilReactComponent<OntarioIconMediaFastForwardElement, OntarioIconMediaFastForwardEvents> = /*@__PURE__*/ createComponent<OntarioIconMediaFastForwardElement, OntarioIconMediaFastForwardEvents>({
    tagName: 'ontario-icon-media-fast-forward',
    elementClass: OntarioIconMediaFastForwardElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMediaFastForwardEvents,
    defineCustomElement: defineOntarioIconMediaFastForward
});

type OntarioIconMediaFastRewindEvents = NonNullable<unknown>;

export const OntarioIconMediaFastRewind: StencilReactComponent<OntarioIconMediaFastRewindElement, OntarioIconMediaFastRewindEvents> = /*@__PURE__*/ createComponent<OntarioIconMediaFastRewindElement, OntarioIconMediaFastRewindEvents>({
    tagName: 'ontario-icon-media-fast-rewind',
    elementClass: OntarioIconMediaFastRewindElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMediaFastRewindEvents,
    defineCustomElement: defineOntarioIconMediaFastRewind
});

type OntarioIconMediaPauseEvents = NonNullable<unknown>;

export const OntarioIconMediaPause: StencilReactComponent<OntarioIconMediaPauseElement, OntarioIconMediaPauseEvents> = /*@__PURE__*/ createComponent<OntarioIconMediaPauseElement, OntarioIconMediaPauseEvents>({
    tagName: 'ontario-icon-media-pause',
    elementClass: OntarioIconMediaPauseElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMediaPauseEvents,
    defineCustomElement: defineOntarioIconMediaPause
});

type OntarioIconMediaPlayEvents = NonNullable<unknown>;

export const OntarioIconMediaPlay: StencilReactComponent<OntarioIconMediaPlayElement, OntarioIconMediaPlayEvents> = /*@__PURE__*/ createComponent<OntarioIconMediaPlayElement, OntarioIconMediaPlayEvents>({
    tagName: 'ontario-icon-media-play',
    elementClass: OntarioIconMediaPlayElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMediaPlayEvents,
    defineCustomElement: defineOntarioIconMediaPlay
});

type OntarioIconMediaStopEvents = NonNullable<unknown>;

export const OntarioIconMediaStop: StencilReactComponent<OntarioIconMediaStopElement, OntarioIconMediaStopEvents> = /*@__PURE__*/ createComponent<OntarioIconMediaStopElement, OntarioIconMediaStopEvents>({
    tagName: 'ontario-icon-media-stop',
    elementClass: OntarioIconMediaStopElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMediaStopEvents,
    defineCustomElement: defineOntarioIconMediaStop
});

type OntarioIconMenuEvents = NonNullable<unknown>;

export const OntarioIconMenu: StencilReactComponent<OntarioIconMenuElement, OntarioIconMenuEvents> = /*@__PURE__*/ createComponent<OntarioIconMenuElement, OntarioIconMenuEvents>({
    tagName: 'ontario-icon-menu',
    elementClass: OntarioIconMenuElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMenuEvents,
    defineCustomElement: defineOntarioIconMenu
});

type OntarioIconMenuHeaderEvents = NonNullable<unknown>;

export const OntarioIconMenuHeader: StencilReactComponent<OntarioIconMenuHeaderElement, OntarioIconMenuHeaderEvents> = /*@__PURE__*/ createComponent<OntarioIconMenuHeaderElement, OntarioIconMenuHeaderEvents>({
    tagName: 'ontario-icon-menu-header',
    elementClass: OntarioIconMenuHeaderElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMenuHeaderEvents,
    defineCustomElement: defineOntarioIconMenuHeader
});

type OntarioIconMicrophoneOffEvents = NonNullable<unknown>;

export const OntarioIconMicrophoneOff: StencilReactComponent<OntarioIconMicrophoneOffElement, OntarioIconMicrophoneOffEvents> = /*@__PURE__*/ createComponent<OntarioIconMicrophoneOffElement, OntarioIconMicrophoneOffEvents>({
    tagName: 'ontario-icon-microphone-off',
    elementClass: OntarioIconMicrophoneOffElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMicrophoneOffEvents,
    defineCustomElement: defineOntarioIconMicrophoneOff
});

type OntarioIconMicrophoneOnEvents = NonNullable<unknown>;

export const OntarioIconMicrophoneOn: StencilReactComponent<OntarioIconMicrophoneOnElement, OntarioIconMicrophoneOnEvents> = /*@__PURE__*/ createComponent<OntarioIconMicrophoneOnElement, OntarioIconMicrophoneOnEvents>({
    tagName: 'ontario-icon-microphone-on',
    elementClass: OntarioIconMicrophoneOnElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMicrophoneOnEvents,
    defineCustomElement: defineOntarioIconMicrophoneOn
});

type OntarioIconMoreVerticalEvents = NonNullable<unknown>;

export const OntarioIconMoreVertical: StencilReactComponent<OntarioIconMoreVerticalElement, OntarioIconMoreVerticalEvents> = /*@__PURE__*/ createComponent<OntarioIconMoreVerticalElement, OntarioIconMoreVerticalEvents>({
    tagName: 'ontario-icon-more-vertical',
    elementClass: OntarioIconMoreVerticalElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconMoreVerticalEvents,
    defineCustomElement: defineOntarioIconMoreVertical
});

type OntarioIconNewWindowEvents = NonNullable<unknown>;

export const OntarioIconNewWindow: StencilReactComponent<OntarioIconNewWindowElement, OntarioIconNewWindowEvents> = /*@__PURE__*/ createComponent<OntarioIconNewWindowElement, OntarioIconNewWindowEvents>({
    tagName: 'ontario-icon-new-window',
    elementClass: OntarioIconNewWindowElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconNewWindowEvents,
    defineCustomElement: defineOntarioIconNewWindow
});

type OntarioIconNextEvents = NonNullable<unknown>;

export const OntarioIconNext: StencilReactComponent<OntarioIconNextElement, OntarioIconNextEvents> = /*@__PURE__*/ createComponent<OntarioIconNextElement, OntarioIconNextEvents>({
    tagName: 'ontario-icon-next',
    elementClass: OntarioIconNextElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconNextEvents,
    defineCustomElement: defineOntarioIconNext
});

type OntarioIconNotificationEvents = NonNullable<unknown>;

export const OntarioIconNotification: StencilReactComponent<OntarioIconNotificationElement, OntarioIconNotificationEvents> = /*@__PURE__*/ createComponent<OntarioIconNotificationElement, OntarioIconNotificationEvents>({
    tagName: 'ontario-icon-notification',
    elementClass: OntarioIconNotificationElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconNotificationEvents,
    defineCustomElement: defineOntarioIconNotification
});

type OntarioIconPasswordHideEvents = NonNullable<unknown>;

export const OntarioIconPasswordHide: StencilReactComponent<OntarioIconPasswordHideElement, OntarioIconPasswordHideEvents> = /*@__PURE__*/ createComponent<OntarioIconPasswordHideElement, OntarioIconPasswordHideEvents>({
    tagName: 'ontario-icon-password-hide',
    elementClass: OntarioIconPasswordHideElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconPasswordHideEvents,
    defineCustomElement: defineOntarioIconPasswordHide
});

type OntarioIconPasswordShowEvents = NonNullable<unknown>;

export const OntarioIconPasswordShow: StencilReactComponent<OntarioIconPasswordShowElement, OntarioIconPasswordShowEvents> = /*@__PURE__*/ createComponent<OntarioIconPasswordShowElement, OntarioIconPasswordShowEvents>({
    tagName: 'ontario-icon-password-show',
    elementClass: OntarioIconPasswordShowElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconPasswordShowEvents,
    defineCustomElement: defineOntarioIconPasswordShow
});

type OntarioIconPhoneEvents = NonNullable<unknown>;

export const OntarioIconPhone: StencilReactComponent<OntarioIconPhoneElement, OntarioIconPhoneEvents> = /*@__PURE__*/ createComponent<OntarioIconPhoneElement, OntarioIconPhoneEvents>({
    tagName: 'ontario-icon-phone',
    elementClass: OntarioIconPhoneElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconPhoneEvents,
    defineCustomElement: defineOntarioIconPhone
});

type OntarioIconPhotoEvents = NonNullable<unknown>;

export const OntarioIconPhoto: StencilReactComponent<OntarioIconPhotoElement, OntarioIconPhotoEvents> = /*@__PURE__*/ createComponent<OntarioIconPhotoElement, OntarioIconPhotoEvents>({
    tagName: 'ontario-icon-photo',
    elementClass: OntarioIconPhotoElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconPhotoEvents,
    defineCustomElement: defineOntarioIconPhoto
});

type OntarioIconPinLocationOffEvents = NonNullable<unknown>;

export const OntarioIconPinLocationOff: StencilReactComponent<OntarioIconPinLocationOffElement, OntarioIconPinLocationOffEvents> = /*@__PURE__*/ createComponent<OntarioIconPinLocationOffElement, OntarioIconPinLocationOffEvents>({
    tagName: 'ontario-icon-pin-location-off',
    elementClass: OntarioIconPinLocationOffElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconPinLocationOffEvents,
    defineCustomElement: defineOntarioIconPinLocationOff
});

type OntarioIconPinLocationOnEvents = NonNullable<unknown>;

export const OntarioIconPinLocationOn: StencilReactComponent<OntarioIconPinLocationOnElement, OntarioIconPinLocationOnEvents> = /*@__PURE__*/ createComponent<OntarioIconPinLocationOnElement, OntarioIconPinLocationOnEvents>({
    tagName: 'ontario-icon-pin-location-on',
    elementClass: OntarioIconPinLocationOnElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconPinLocationOnEvents,
    defineCustomElement: defineOntarioIconPinLocationOn
});

type OntarioIconPreviousEvents = NonNullable<unknown>;

export const OntarioIconPrevious: StencilReactComponent<OntarioIconPreviousElement, OntarioIconPreviousEvents> = /*@__PURE__*/ createComponent<OntarioIconPreviousElement, OntarioIconPreviousEvents>({
    tagName: 'ontario-icon-previous',
    elementClass: OntarioIconPreviousElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconPreviousEvents,
    defineCustomElement: defineOntarioIconPrevious
});

type OntarioIconPrintEvents = NonNullable<unknown>;

export const OntarioIconPrint: StencilReactComponent<OntarioIconPrintElement, OntarioIconPrintEvents> = /*@__PURE__*/ createComponent<OntarioIconPrintElement, OntarioIconPrintEvents>({
    tagName: 'ontario-icon-print',
    elementClass: OntarioIconPrintElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconPrintEvents,
    defineCustomElement: defineOntarioIconPrint
});

type OntarioIconRemoveEvents = NonNullable<unknown>;

export const OntarioIconRemove: StencilReactComponent<OntarioIconRemoveElement, OntarioIconRemoveEvents> = /*@__PURE__*/ createComponent<OntarioIconRemoveElement, OntarioIconRemoveEvents>({
    tagName: 'ontario-icon-remove',
    elementClass: OntarioIconRemoveElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconRemoveEvents,
    defineCustomElement: defineOntarioIconRemove
});

type OntarioIconRemoveAltEvents = NonNullable<unknown>;

export const OntarioIconRemoveAlt: StencilReactComponent<OntarioIconRemoveAltElement, OntarioIconRemoveAltEvents> = /*@__PURE__*/ createComponent<OntarioIconRemoveAltElement, OntarioIconRemoveAltEvents>({
    tagName: 'ontario-icon-remove-alt',
    elementClass: OntarioIconRemoveAltElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconRemoveAltEvents,
    defineCustomElement: defineOntarioIconRemoveAlt
});

type OntarioIconReplayEvents = NonNullable<unknown>;

export const OntarioIconReplay: StencilReactComponent<OntarioIconReplayElement, OntarioIconReplayEvents> = /*@__PURE__*/ createComponent<OntarioIconReplayElement, OntarioIconReplayEvents>({
    tagName: 'ontario-icon-replay',
    elementClass: OntarioIconReplayElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconReplayEvents,
    defineCustomElement: defineOntarioIconReplay
});

type OntarioIconRssFeedEvents = NonNullable<unknown>;

export const OntarioIconRssFeed: StencilReactComponent<OntarioIconRssFeedElement, OntarioIconRssFeedEvents> = /*@__PURE__*/ createComponent<OntarioIconRssFeedElement, OntarioIconRssFeedEvents>({
    tagName: 'ontario-icon-rss-feed',
    elementClass: OntarioIconRssFeedElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconRssFeedEvents,
    defineCustomElement: defineOntarioIconRssFeed
});

type OntarioIconSaveEvents = NonNullable<unknown>;

export const OntarioIconSave: StencilReactComponent<OntarioIconSaveElement, OntarioIconSaveEvents> = /*@__PURE__*/ createComponent<OntarioIconSaveElement, OntarioIconSaveEvents>({
    tagName: 'ontario-icon-save',
    elementClass: OntarioIconSaveElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSaveEvents,
    defineCustomElement: defineOntarioIconSave
});

type OntarioIconSearchEvents = NonNullable<unknown>;

export const OntarioIconSearch: StencilReactComponent<OntarioIconSearchElement, OntarioIconSearchEvents> = /*@__PURE__*/ createComponent<OntarioIconSearchElement, OntarioIconSearchEvents>({
    tagName: 'ontario-icon-search',
    elementClass: OntarioIconSearchElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSearchEvents,
    defineCustomElement: defineOntarioIconSearch
});

type OntarioIconSearchWhiteEvents = NonNullable<unknown>;

export const OntarioIconSearchWhite: StencilReactComponent<OntarioIconSearchWhiteElement, OntarioIconSearchWhiteEvents> = /*@__PURE__*/ createComponent<OntarioIconSearchWhiteElement, OntarioIconSearchWhiteEvents>({
    tagName: 'ontario-icon-search-white',
    elementClass: OntarioIconSearchWhiteElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSearchWhiteEvents,
    defineCustomElement: defineOntarioIconSearchWhite
});

type OntarioIconSentiment1Events = NonNullable<unknown>;

export const OntarioIconSentiment1: StencilReactComponent<OntarioIconSentiment1Element, OntarioIconSentiment1Events> = /*@__PURE__*/ createComponent<OntarioIconSentiment1Element, OntarioIconSentiment1Events>({
    tagName: 'ontario-icon-sentiment-1',
    elementClass: OntarioIconSentiment1Element,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSentiment1Events,
    defineCustomElement: defineOntarioIconSentiment1
});

type OntarioIconSentiment2Events = NonNullable<unknown>;

export const OntarioIconSentiment2: StencilReactComponent<OntarioIconSentiment2Element, OntarioIconSentiment2Events> = /*@__PURE__*/ createComponent<OntarioIconSentiment2Element, OntarioIconSentiment2Events>({
    tagName: 'ontario-icon-sentiment-2',
    elementClass: OntarioIconSentiment2Element,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSentiment2Events,
    defineCustomElement: defineOntarioIconSentiment2
});

type OntarioIconSentiment3Events = NonNullable<unknown>;

export const OntarioIconSentiment3: StencilReactComponent<OntarioIconSentiment3Element, OntarioIconSentiment3Events> = /*@__PURE__*/ createComponent<OntarioIconSentiment3Element, OntarioIconSentiment3Events>({
    tagName: 'ontario-icon-sentiment-3',
    elementClass: OntarioIconSentiment3Element,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSentiment3Events,
    defineCustomElement: defineOntarioIconSentiment3
});

type OntarioIconSentiment4Events = NonNullable<unknown>;

export const OntarioIconSentiment4: StencilReactComponent<OntarioIconSentiment4Element, OntarioIconSentiment4Events> = /*@__PURE__*/ createComponent<OntarioIconSentiment4Element, OntarioIconSentiment4Events>({
    tagName: 'ontario-icon-sentiment-4',
    elementClass: OntarioIconSentiment4Element,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSentiment4Events,
    defineCustomElement: defineOntarioIconSentiment4
});

type OntarioIconSentiment5Events = NonNullable<unknown>;

export const OntarioIconSentiment5: StencilReactComponent<OntarioIconSentiment5Element, OntarioIconSentiment5Events> = /*@__PURE__*/ createComponent<OntarioIconSentiment5Element, OntarioIconSentiment5Events>({
    tagName: 'ontario-icon-sentiment-5',
    elementClass: OntarioIconSentiment5Element,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSentiment5Events,
    defineCustomElement: defineOntarioIconSentiment5
});

type OntarioIconSettingsEvents = NonNullable<unknown>;

export const OntarioIconSettings: StencilReactComponent<OntarioIconSettingsElement, OntarioIconSettingsEvents> = /*@__PURE__*/ createComponent<OntarioIconSettingsElement, OntarioIconSettingsEvents>({
    tagName: 'ontario-icon-settings',
    elementClass: OntarioIconSettingsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSettingsEvents,
    defineCustomElement: defineOntarioIconSettings
});

type OntarioIconShareEvents = NonNullable<unknown>;

export const OntarioIconShare: StencilReactComponent<OntarioIconShareElement, OntarioIconShareEvents> = /*@__PURE__*/ createComponent<OntarioIconShareElement, OntarioIconShareEvents>({
    tagName: 'ontario-icon-share',
    elementClass: OntarioIconShareElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconShareEvents,
    defineCustomElement: defineOntarioIconShare
});

type OntarioIconSortEvents = NonNullable<unknown>;

export const OntarioIconSort: StencilReactComponent<OntarioIconSortElement, OntarioIconSortEvents> = /*@__PURE__*/ createComponent<OntarioIconSortElement, OntarioIconSortEvents>({
    tagName: 'ontario-icon-sort',
    elementClass: OntarioIconSortElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconSortEvents,
    defineCustomElement: defineOntarioIconSort
});

type OntarioIconTagEvents = NonNullable<unknown>;

export const OntarioIconTag: StencilReactComponent<OntarioIconTagElement, OntarioIconTagEvents> = /*@__PURE__*/ createComponent<OntarioIconTagElement, OntarioIconTagEvents>({
    tagName: 'ontario-icon-tag',
    elementClass: OntarioIconTagElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTagEvents,
    defineCustomElement: defineOntarioIconTag
});

type OntarioIconTextMessageEvents = NonNullable<unknown>;

export const OntarioIconTextMessage: StencilReactComponent<OntarioIconTextMessageElement, OntarioIconTextMessageEvents> = /*@__PURE__*/ createComponent<OntarioIconTextMessageElement, OntarioIconTextMessageEvents>({
    tagName: 'ontario-icon-text-message',
    elementClass: OntarioIconTextMessageElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTextMessageEvents,
    defineCustomElement: defineOntarioIconTextMessage
});

type OntarioIconTimerEvents = NonNullable<unknown>;

export const OntarioIconTimer: StencilReactComponent<OntarioIconTimerElement, OntarioIconTimerEvents> = /*@__PURE__*/ createComponent<OntarioIconTimerElement, OntarioIconTimerEvents>({
    tagName: 'ontario-icon-timer',
    elementClass: OntarioIconTimerElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTimerEvents,
    defineCustomElement: defineOntarioIconTimer
});

type OntarioIconTransportBicycleEvents = NonNullable<unknown>;

export const OntarioIconTransportBicycle: StencilReactComponent<OntarioIconTransportBicycleElement, OntarioIconTransportBicycleEvents> = /*@__PURE__*/ createComponent<OntarioIconTransportBicycleElement, OntarioIconTransportBicycleEvents>({
    tagName: 'ontario-icon-transport-bicycle',
    elementClass: OntarioIconTransportBicycleElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTransportBicycleEvents,
    defineCustomElement: defineOntarioIconTransportBicycle
});

type OntarioIconTransportBusEvents = NonNullable<unknown>;

export const OntarioIconTransportBus: StencilReactComponent<OntarioIconTransportBusElement, OntarioIconTransportBusEvents> = /*@__PURE__*/ createComponent<OntarioIconTransportBusElement, OntarioIconTransportBusEvents>({
    tagName: 'ontario-icon-transport-bus',
    elementClass: OntarioIconTransportBusElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTransportBusEvents,
    defineCustomElement: defineOntarioIconTransportBus
});

type OntarioIconTransportCarEvents = NonNullable<unknown>;

export const OntarioIconTransportCar: StencilReactComponent<OntarioIconTransportCarElement, OntarioIconTransportCarEvents> = /*@__PURE__*/ createComponent<OntarioIconTransportCarElement, OntarioIconTransportCarEvents>({
    tagName: 'ontario-icon-transport-car',
    elementClass: OntarioIconTransportCarElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTransportCarEvents,
    defineCustomElement: defineOntarioIconTransportCar
});

type OntarioIconTransportWalkEvents = NonNullable<unknown>;

export const OntarioIconTransportWalk: StencilReactComponent<OntarioIconTransportWalkElement, OntarioIconTransportWalkEvents> = /*@__PURE__*/ createComponent<OntarioIconTransportWalkElement, OntarioIconTransportWalkEvents>({
    tagName: 'ontario-icon-transport-walk',
    elementClass: OntarioIconTransportWalkElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTransportWalkEvents,
    defineCustomElement: defineOntarioIconTransportWalk
});

type OntarioIconTtyEvents = NonNullable<unknown>;

export const OntarioIconTty: StencilReactComponent<OntarioIconTtyElement, OntarioIconTtyEvents> = /*@__PURE__*/ createComponent<OntarioIconTtyElement, OntarioIconTtyEvents>({
    tagName: 'ontario-icon-tty',
    elementClass: OntarioIconTtyElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTtyEvents,
    defineCustomElement: defineOntarioIconTty
});

type OntarioIconTwitterEvents = NonNullable<unknown>;

export const OntarioIconTwitter: StencilReactComponent<OntarioIconTwitterElement, OntarioIconTwitterEvents> = /*@__PURE__*/ createComponent<OntarioIconTwitterElement, OntarioIconTwitterEvents>({
    tagName: 'ontario-icon-twitter',
    elementClass: OntarioIconTwitterElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTwitterEvents,
    defineCustomElement: defineOntarioIconTwitter
});

type OntarioIconTwitterAltEvents = NonNullable<unknown>;

export const OntarioIconTwitterAlt: StencilReactComponent<OntarioIconTwitterAltElement, OntarioIconTwitterAltEvents> = /*@__PURE__*/ createComponent<OntarioIconTwitterAltElement, OntarioIconTwitterAltEvents>({
    tagName: 'ontario-icon-twitter-alt',
    elementClass: OntarioIconTwitterAltElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconTwitterAltEvents,
    defineCustomElement: defineOntarioIconTwitterAlt
});

type OntarioIconUploadEvents = NonNullable<unknown>;

export const OntarioIconUpload: StencilReactComponent<OntarioIconUploadElement, OntarioIconUploadEvents> = /*@__PURE__*/ createComponent<OntarioIconUploadElement, OntarioIconUploadEvents>({
    tagName: 'ontario-icon-upload',
    elementClass: OntarioIconUploadElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconUploadEvents,
    defineCustomElement: defineOntarioIconUpload
});

type OntarioIconVideoEvents = NonNullable<unknown>;

export const OntarioIconVideo: StencilReactComponent<OntarioIconVideoElement, OntarioIconVideoEvents> = /*@__PURE__*/ createComponent<OntarioIconVideoElement, OntarioIconVideoEvents>({
    tagName: 'ontario-icon-video',
    elementClass: OntarioIconVideoElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconVideoEvents,
    defineCustomElement: defineOntarioIconVideo
});

type OntarioIconVisaEvents = NonNullable<unknown>;

export const OntarioIconVisa: StencilReactComponent<OntarioIconVisaElement, OntarioIconVisaEvents> = /*@__PURE__*/ createComponent<OntarioIconVisaElement, OntarioIconVisaEvents>({
    tagName: 'ontario-icon-visa',
    elementClass: OntarioIconVisaElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconVisaEvents,
    defineCustomElement: defineOntarioIconVisa
});

type OntarioIconVoteDislikeEvents = NonNullable<unknown>;

export const OntarioIconVoteDislike: StencilReactComponent<OntarioIconVoteDislikeElement, OntarioIconVoteDislikeEvents> = /*@__PURE__*/ createComponent<OntarioIconVoteDislikeElement, OntarioIconVoteDislikeEvents>({
    tagName: 'ontario-icon-vote-dislike',
    elementClass: OntarioIconVoteDislikeElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconVoteDislikeEvents,
    defineCustomElement: defineOntarioIconVoteDislike
});

type OntarioIconVoteLikeEvents = NonNullable<unknown>;

export const OntarioIconVoteLike: StencilReactComponent<OntarioIconVoteLikeElement, OntarioIconVoteLikeEvents> = /*@__PURE__*/ createComponent<OntarioIconVoteLikeElement, OntarioIconVoteLikeEvents>({
    tagName: 'ontario-icon-vote-like',
    elementClass: OntarioIconVoteLikeElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconVoteLikeEvents,
    defineCustomElement: defineOntarioIconVoteLike
});

type OntarioIconVpnKeyEvents = NonNullable<unknown>;

export const OntarioIconVpnKey: StencilReactComponent<OntarioIconVpnKeyElement, OntarioIconVpnKeyEvents> = /*@__PURE__*/ createComponent<OntarioIconVpnKeyElement, OntarioIconVpnKeyEvents>({
    tagName: 'ontario-icon-vpn-key',
    elementClass: OntarioIconVpnKeyElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconVpnKeyEvents,
    defineCustomElement: defineOntarioIconVpnKey
});

type OntarioIconWheelchairEvents = NonNullable<unknown>;

export const OntarioIconWheelchair: StencilReactComponent<OntarioIconWheelchairElement, OntarioIconWheelchairEvents> = /*@__PURE__*/ createComponent<OntarioIconWheelchairElement, OntarioIconWheelchairEvents>({
    tagName: 'ontario-icon-wheelchair',
    elementClass: OntarioIconWheelchairElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconWheelchairEvents,
    defineCustomElement: defineOntarioIconWheelchair
});

type OntarioIconWifiEvents = NonNullable<unknown>;

export const OntarioIconWifi: StencilReactComponent<OntarioIconWifiElement, OntarioIconWifiEvents> = /*@__PURE__*/ createComponent<OntarioIconWifiElement, OntarioIconWifiEvents>({
    tagName: 'ontario-icon-wifi',
    elementClass: OntarioIconWifiElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconWifiEvents,
    defineCustomElement: defineOntarioIconWifi
});

type OntarioIconYoutubeEvents = NonNullable<unknown>;

export const OntarioIconYoutube: StencilReactComponent<OntarioIconYoutubeElement, OntarioIconYoutubeEvents> = /*@__PURE__*/ createComponent<OntarioIconYoutubeElement, OntarioIconYoutubeEvents>({
    tagName: 'ontario-icon-youtube',
    elementClass: OntarioIconYoutubeElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioIconYoutubeEvents,
    defineCustomElement: defineOntarioIconYoutube
});

type OntarioInputEvents = {
    onInputOnInput: EventName<OntarioInputCustomEvent<InputInputEvent>>,
    onInputOnChange: EventName<OntarioInputCustomEvent<InputInteractionEvent>>,
    onInputOnBlur: EventName<OntarioInputCustomEvent<InputFocusBlurEvent>>,
    onInputOnFocus: EventName<OntarioInputCustomEvent<InputFocusBlurEvent>>,
    onInputErrorOccurred: EventName<CustomEvent<{ inputId: string; errorMessage: string }>>
};

export const OntarioInput: StencilReactComponent<OntarioInputElement, OntarioInputEvents> = /*@__PURE__*/ createComponent<OntarioInputElement, OntarioInputEvents>({
    tagName: 'ontario-input',
    elementClass: OntarioInputElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onInputOnInput: 'inputOnInput',
        onInputOnChange: 'inputOnChange',
        onInputOnBlur: 'inputOnBlur',
        onInputOnFocus: 'inputOnFocus',
        onInputErrorOccurred: 'inputErrorOccurred'
    } as OntarioInputEvents,
    defineCustomElement: defineOntarioInput
});

type OntarioLanguageToggleEvents = {
    onSetAppLanguage: EventName<OntarioLanguageToggleCustomEvent<Language>>,
    onHeaderLanguageToggled: EventName<OntarioLanguageToggleCustomEvent<HeaderLanguageToggleEventDetails>>
};

export const OntarioLanguageToggle: StencilReactComponent<OntarioLanguageToggleElement, OntarioLanguageToggleEvents> = /*@__PURE__*/ createComponent<OntarioLanguageToggleElement, OntarioLanguageToggleEvents>({
    tagName: 'ontario-language-toggle',
    elementClass: OntarioLanguageToggleElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSetAppLanguage: 'setAppLanguage',
        onHeaderLanguageToggled: 'headerLanguageToggled'
    } as OntarioLanguageToggleEvents,
    defineCustomElement: defineOntarioLanguageToggle
});

type OntarioLoadingIndicatorEvents = NonNullable<unknown>;

export const OntarioLoadingIndicator: StencilReactComponent<OntarioLoadingIndicatorElement, OntarioLoadingIndicatorEvents> = /*@__PURE__*/ createComponent<OntarioLoadingIndicatorElement, OntarioLoadingIndicatorEvents>({
    tagName: 'ontario-loading-indicator',
    elementClass: OntarioLoadingIndicatorElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioLoadingIndicatorEvents,
    defineCustomElement: defineOntarioLoadingIndicator
});

type OntarioPageAlertEvents = NonNullable<unknown>;

export const OntarioPageAlert: StencilReactComponent<OntarioPageAlertElement, OntarioPageAlertEvents> = /*@__PURE__*/ createComponent<OntarioPageAlertElement, OntarioPageAlertEvents>({
    tagName: 'ontario-page-alert',
    elementClass: OntarioPageAlertElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioPageAlertEvents,
    defineCustomElement: defineOntarioPageAlert
});

type OntarioRadioButtonsEvents = {
    onRadioOnChange: EventName<OntarioRadioButtonsCustomEvent<RadioAndCheckboxChangeEvent>>,
    onRadioOnBlur: EventName<OntarioRadioButtonsCustomEvent<InputFocusBlurEvent>>,
    onRadioOnFocus: EventName<OntarioRadioButtonsCustomEvent<InputFocusBlurEvent>>,
    onInputErrorOccurred: EventName<CustomEvent<{ errorMessage: string }>>
};

export const OntarioRadioButtons: StencilReactComponent<OntarioRadioButtonsElement, OntarioRadioButtonsEvents> = /*@__PURE__*/ createComponent<OntarioRadioButtonsElement, OntarioRadioButtonsEvents>({
    tagName: 'ontario-radio-buttons',
    elementClass: OntarioRadioButtonsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onRadioOnChange: 'radioOnChange',
        onRadioOnBlur: 'radioOnBlur',
        onRadioOnFocus: 'radioOnFocus',
        onInputErrorOccurred: 'inputErrorOccurred'
    } as OntarioRadioButtonsEvents,
    defineCustomElement: defineOntarioRadioButtons
});

type OntarioSearchBoxEvents = {
    onSearchOnSubmit: EventName<CustomEvent<string>>,
    onInputOnInput: EventName<OntarioSearchBoxCustomEvent<InputInputEvent>>,
    onInputOnChange: EventName<OntarioSearchBoxCustomEvent<InputInteractionEvent>>,
    onInputOnBlur: EventName<OntarioSearchBoxCustomEvent<InputFocusBlurEvent>>,
    onInputOnFocus: EventName<OntarioSearchBoxCustomEvent<InputFocusBlurEvent>>
};

export const OntarioSearchBox: StencilReactComponent<OntarioSearchBoxElement, OntarioSearchBoxEvents> = /*@__PURE__*/ createComponent<OntarioSearchBoxElement, OntarioSearchBoxEvents>({
    tagName: 'ontario-search-box',
    elementClass: OntarioSearchBoxElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onSearchOnSubmit: 'searchOnSubmit',
        onInputOnInput: 'inputOnInput',
        onInputOnChange: 'inputOnChange',
        onInputOnBlur: 'inputOnBlur',
        onInputOnFocus: 'inputOnFocus'
    } as OntarioSearchBoxEvents,
    defineCustomElement: defineOntarioSearchBox
});

type OntarioStepIndicatorEvents = NonNullable<unknown>;

export const OntarioStepIndicator: StencilReactComponent<OntarioStepIndicatorElement, OntarioStepIndicatorEvents> = /*@__PURE__*/ createComponent<OntarioStepIndicatorElement, OntarioStepIndicatorEvents>({
    tagName: 'ontario-step-indicator',
    elementClass: OntarioStepIndicatorElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioStepIndicatorEvents,
    defineCustomElement: defineOntarioStepIndicator
});

type OntarioTableEvents = NonNullable<unknown>;

export const OntarioTable: StencilReactComponent<OntarioTableElement, OntarioTableEvents> = /*@__PURE__*/ createComponent<OntarioTableElement, OntarioTableEvents>({
    tagName: 'ontario-table',
    elementClass: OntarioTableElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioTableEvents,
    defineCustomElement: defineOntarioTable
});

type OntarioTaskEvents = NonNullable<unknown>;

export const OntarioTask: StencilReactComponent<OntarioTaskElement, OntarioTaskEvents> = /*@__PURE__*/ createComponent<OntarioTaskElement, OntarioTaskEvents>({
    tagName: 'ontario-task',
    elementClass: OntarioTaskElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioTaskEvents,
    defineCustomElement: defineOntarioTask
});

type OntarioTaskListEvents = NonNullable<unknown>;

export const OntarioTaskList: StencilReactComponent<OntarioTaskListElement, OntarioTaskListEvents> = /*@__PURE__*/ createComponent<OntarioTaskListElement, OntarioTaskListEvents>({
    tagName: 'ontario-task-list',
    elementClass: OntarioTaskListElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OntarioTaskListEvents,
    defineCustomElement: defineOntarioTaskList
});

type OntarioTextareaEvents = {
    onInputOnInput: EventName<OntarioTextareaCustomEvent<InputInputEvent>>,
    onInputOnChange: EventName<OntarioTextareaCustomEvent<InputInteractionEvent>>,
    onInputOnBlur: EventName<OntarioTextareaCustomEvent<InputFocusBlurEvent>>,
    onInputOnFocus: EventName<OntarioTextareaCustomEvent<InputFocusBlurEvent>>,
    onInputErrorOccurred: EventName<CustomEvent<{ inputId: string; errorMessage: string }>>
};

export const OntarioTextarea: StencilReactComponent<OntarioTextareaElement, OntarioTextareaEvents> = /*@__PURE__*/ createComponent<OntarioTextareaElement, OntarioTextareaEvents>({
    tagName: 'ontario-textarea',
    elementClass: OntarioTextareaElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onInputOnInput: 'inputOnInput',
        onInputOnChange: 'inputOnChange',
        onInputOnBlur: 'inputOnBlur',
        onInputOnFocus: 'inputOnFocus',
        onInputErrorOccurred: 'inputErrorOccurred'
    } as OntarioTextareaEvents,
    defineCustomElement: defineOntarioTextarea
});
