import * as fs from 'fs';
import * as path from 'path';

// Configuration
const sourceFolder: string = path.join(__dirname, '../src/styles/slotted-styles');
const outputFolder: string = path.join(__dirname, '../src/styles');
const outputFile: string = path.join(outputFolder, 'theme.scss');

// Ensure the output folder exists
if (!fs.existsSync(outputFolder)) {
	fs.mkdirSync(outputFolder, { recursive: true });
}

// Start the SCSS content with a warning and the forwarded global styles
let scssContent: string =
	`// WARNING: This file is autogenerated. Do not edit manually.\n` +
	`// Changes will be overwritten during the build process.\n\n` +
	`@forward '@ongov/ontario-design-system-global-styles/dist/styles/scss/theme.scss';\n\n`;

// Get all .scss files from the source folder
const scssFiles: string[] = fs.readdirSync(sourceFolder).filter((file: string) => file.endsWith('.scss'));

if (scssFiles.length === 0) {
	console.error('No SCSS files found in the source folder.');
	process.exit(1);
}

// Add imports for each file
scssFiles.forEach((file: string) => {
	const relativePath: string = `./${path.relative(outputFolder, path.join(sourceFolder, file)).replace(/\\/g, '/')}`;
	scssContent += `@use '${relativePath}';\n`;
});

// Write the content to the theme.scss file
fs.writeFileSync(outputFile, scssContent, 'utf8');

console.log(`Generated theme.scss at ${outputFile}`);
