import * as fs from 'fs';
import * as path from 'path';

// Define default paths for input and output folders
const defaultSlottedStyleSourceFolder: string = path.join(__dirname, '../src/styles/slotted-styles');
const defaultOutputFolder: string = path.join(__dirname, '../src/styles');
const defaultOutputFile: string = path.join(defaultOutputFolder, 'theme.scss');

// Check if the folder already exists using fs.existsSync
export function checkOutputFolderExists(folderPath: string): boolean {
	return fs.existsSync(folderPath);
}

// If output folder doesn't exist, create the folder using fs.mkdirSync
export function createOutputFolder(folderPath: string): void {
	if (!fs.existsSync(folderPath)) {
		fs.mkdirSync(folderPath, { recursive: true });
	}
}

// Retrieve a list of all SCSS files in the specified source folder
export const getSlottedStyleFiles = (folder: string): string[] => {
	const files: string[] = fs.readdirSync(folder).filter((file) => file.endsWith('.scss'));

	if (files.length === 0) {
		console.warn('No SCSS files found in the source folder.');
	}

	return files;
};

// Generate the complete SCSS content, including the header and @use imports
export const generateThemeSCSSContent = (
	files: string[] = [],
	sourceFolder: string = defaultSlottedStyleSourceFolder,
	targetFolder: string = defaultOutputFolder,
): string => {
	const header =
		`// WARNING: This file is autogenerated. Do not edit manually.\n` +
		`// Changes will be overwritten during the build process.\n\n` +
		`@forward '@ongov/ontario-design-system-global-styles/dist/styles/scss/theme.scss';\n\n`;

	const imports = files
		.map((file) => {
			const relativePath: string = `./${path.relative(targetFolder, path.join(sourceFolder, file)).replace(/\\/g, '/')}`;
			return `@use '${relativePath}';`;
		})
		.join('\n');

	return header + imports + '\n';
};

// Write the generated SCSS content to the theme.scss file
export const writeGeneratedSCSSToTheme = (filePath: string, content: string): void => {
	fs.writeFileSync(filePath, content, 'utf8');
	console.log(`Generated theme.scss at ${filePath}`);
};

// Main function to generate the theme.scss file
export const generateThemeSCSS = (
	sourcedir: string = defaultSlottedStyleSourceFolder,
	outputdir: string = defaultOutputFolder,
	outputfile: string = defaultOutputFile,
): void => {
	if (!checkOutputFolderExists(outputdir)) {
		createOutputFolder(outputdir);
	}

	const scssContent = generateThemeSCSSContent(getSlottedStyleFiles(sourcedir), sourcedir, outputdir);

	writeGeneratedSCSSToTheme(outputfile, scssContent);
};

generateThemeSCSS();
