name: Developer Documentation App

on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: number
      build-artifacts-name:
        required: true
        type: string

jobs:
  build-documentation-app:
    needs: []
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifacts-name }} # Artifact name (must match upload name)
          path: ./packages

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the documentation site
        run: pnpm run build-docs

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-docs # Artifact name
          compression-level: 9 # Best compression
          path: | # Path to the artifacts directory
            packages/app-web-components-documentation
            !**/node_modules/**/*
          if-no-files-found: error # Fail if no files are found

  publish-documentation-app:
    needs: ['build-documentation-app']
    runs-on: ubuntu-latest
    env:
      S3_DEPLOY_BUCKET: vars.AWS_S3_PROD_DEPLOY_BUCKET
      AWS_ACCESS_KEY_ID: secrets.AWS_S3_PROD_ACCESS_KEY
      AWS_SECRET_ACCESS_KEY: secrets.AWS_S3_PROD_ACCESS_SECRET
      DOCS_ENDPOINT: vars.DOCS_ENDPOINT_PROD
    if: ${{ success() && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-docs # Artifact name (must match upload name)
          path: .

      - name: Deploy documentation app
        run: aws s3 sync packages/app-web-components-documentation/build s3://${S3_DEPLOY_BUCKET}/${DOCS_ENDPOINT}/ --delete
